buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
		classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.1.0"
    }
}

plugins {
	id 'se.bjurr.gitchangelog.git-changelog-gradle-plugin' version '1.60'
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.matthewprenger.cursegradle'

version = "${version}"
group = "com.tagnumelite.projecteintegration"
archivesBaseName = "ProjectEIntegration-1.12.2"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2811"
    runDir = "run"
    
    mappings = "snapshot_${mcp_version}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    replace 'required-after:projecte', "required-after:projecte@[${pe_version},)"
    replace '@VERSION@', "${version}"
    
    replace 'after:actuallyadditions', "after:actuallyadditions@[${version_actuallyadditions},)"
    //replace 'after:armorplus', "after:armorplus@[${version_armorplus},)"
    replace 'after:extendedcrafting', "after:extendedcrafting@[${version_extendedcrafting},)"
}

repositories {
    maven {
		name "ModMaven"
		url "https://modmaven.k-4u.nl"
	}
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
}

dependencies {
    deobfCompile "projecte:ProjectE:1.12.2:${pe_version}"
	
	deobfCompile "de.ellpeck.actuallyadditions:ActuallyAdditions:${version_actuallyadditions}"
    
    // CurseForge
    deobfCompile "armorplus:armorplus:1.12.2:${version_armorplus}"
    runtime "cucumber:Cucumber:1.12.2:${version_cucumber}" //ExtendedCrafting Dependency
    runtime "thedragonlib:thedragonlib:1.12.2:${version_thedragonlib}" //ArmorPlus Dependency
    deobfCompile "extended-crafting:ExtendedCrafting:1.12.2:${version_extendedcrafting}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task srcJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

jar {}

artifacts {
    archives deobfJar
	archives srcJar
}

curseforge {
	apiKey = System.env.CURSEFORGE_API_KEY != null ? System.env.CURSEFORGE_API_KEY : '0'
	project {
		id = "${cf_project}"
		changelogType = 'markdown'
		changelog = changelog = file('CHANGELOG.MD')
		releaseType = "${release_type}"
		addGameVersion "1.12.2"
		mainArtifact(jar) {
		  displayName = "ProjectE Integration - ${version}"
		}
		addArtifact(deobfJar) {
		  displayName = "ProjectE Integration (Deobfuscated) - ${version}"
		}
		addArtifact(srcJar) {
		  displayName = "ProjectE Integration (Sources) - ${version}"
		}
		relations {
            requiredDependency 'ProjectE'
            
            // From Other Mavens
            optionalLibrary 'Actually-Additions'
            // From CurseForge Maven
            optionalLibrary 'ArmorPlus'
            optionalLibrary 'Extended-Crafting'
        }
	}
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf {
        project.hasProperty('keyStore')
    }
    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
	inputFile = jar.archivePath
	outputFile = jar.archivePath
}

task signDeobfJar(type: SignJar, dependsOn: deobfJar) {
    onlyIf {
        project.hasProperty('keyStore')
    }
    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = deobfJar.archivePath
    outputFile = deobfJar.archivePath
}

task signSrcJar(type: SignJar, dependsOn: srcJar) {
    onlyIf {
        project.hasProperty('keyStore')
    }
    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = srcJar.archivePath
    outputFile = srcJar.archivePath
}

task makeChangelog(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
    file = new File("CHANGELOG.md");
    gitHubIssuePattern = "nonada123";
    templateContent = """
Changelog of ProjectE Integration

{{#tags}}
## {{name}}
 {{#issues}}
  {{#hasIssue}}
   {{#hasLink}}
### {{name}} [{{issue}}]({{link}}) {{title}} {{#hasIssueType}} *{{issueType}}* {{/hasIssueType}} {{#hasLabels}} {{#labels}} *{{.}}* {{/labels}} {{/hasLabels}}
   {{/hasLink}}
   {{^hasLink}}
### {{name}} {{issue}} {{title}} {{#hasIssueType}} *{{issueType}}* {{/hasIssueType}} {{#hasLabels}} {{#labels}} *{{.}}* {{/labels}} {{/hasLabels}}
   {{/hasLink}}
  {{/hasIssue}}
  {{^hasIssue}}
### {{name}}
  {{/hasIssue}}

  {{#commits}}
**{{{messageTitle}}}**
{{#messageBodyItems}}
 * {{.}}
{{/messageBodyItems}}

[{{hash}}](https://github.com/{{ownerName}}/{{repoName}}/commit/{{hash}}) {{authorName}} *{{commitTime}}*

  {{/commits}}

 {{/issues}}
{{/tags}}
 """;
}

build.dependsOn signJar
build.dependsOn signDeobfJar
build.dependsOn signSrcJar
tasks.build.dependsOn makeChangelog

afterEvaluate {
	tasks["curseforge${cf_project}"].dependsOn.add(signJar)
	tasks["curseforge${cf_project}"].dependsOn.add(signDeobfJar)
	tasks["curseforge${cf_project}"].dependsOn.add(signSrcJar)
	tasks["curseforge${cf_project}"].dependsOn.add(makeChangelog)
}
